basePath: /
consumes:
- application/json
definitions:
  CartItem:
    properties:
      CartID:
        format: int64
        type: integer
      ID:
        format: int64
        type: integer
      Product:
        type: string
      Quantity:
        format: int64
        type: integer
    title: CartItem represents items added to cart.
    type: object
    x-go-package: github.com/fedo3nik/cart-go-api/internal/domain/model
  addItemRequest:
    properties:
      product:
        type: string
        x-go-name: Product
      quantity:
        format: int64
        type: integer
        x-go-name: Quantity
    type: object
    x-go-package: github.com/fedo3nik/cart-go-api/internal/doc
info:
  description: Documentation for Cart API
  title: Cart API
  version: 1.0.0
paths:
  /carts:
    post:
      description: Returns a new cart
      operationId: createCart
      responses:
        "200":
          $ref: '#/responses/cartResponse'
        "502":
          $ref: '#/responses/errorResponse'
      tags:
      - carts
  /carts/{cartID}:
    get:
      description: Returns cart with the items in it
      operationId: getCart
      parameters:
      - example: 1
        format: int64
        in: path
        name: cartID
        required: true
        type: integer
        x-go-name: CartID
      responses:
        "200":
          $ref: '#/responses/cartResponse'
        "400":
          $ref: '#/responses/errorResponse'
        "502":
          $ref: '#/responses/errorResponse'
      tags:
      - carts
  /carts/{cartID}/items:
    post:
      description: Returns a new cartItem
      operationId: addItem
      parameters:
      - example: 1
        format: int64
        in: path
        name: cartID
        required: true
        type: integer
        x-go-name: CartID
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/addItemRequest'
      responses:
        "200":
          $ref: '#/responses/addItemResponse'
        "400":
          $ref: '#/responses/errorResponse'
        "502":
          $ref: '#/responses/errorResponse'
      tags:
      - items
  /carts/{cartID}/items/{itemID}:
    delete:
      description: Returns empty json Object
      operationId: removeItem
      parameters:
      - example: 3
        format: int64
        in: path
        name: cartID
        required: true
        type: integer
        x-go-name: CartID
      - example: 5
        format: int64
        in: path
        name: itemID
        required: true
        type: integer
        x-go-name: ItemID
      responses:
        "200":
          $ref: '#/responses/removeItemResponse'
        "400":
          $ref: '#/responses/errorResponse'
        "502":
          $ref: '#/responses/errorResponse'
      tags:
      - items
produces:
- application/json
responses:
  addItemResponse:
    description: CartItem added into the cart successfully
    headers:
      cart_id:
        description: CartID in which item was placed
        format: int64
        type: integer
      id:
        description: ID of the new cartItem
        format: int64
        type: integer
      product:
        description: Product title
        type: string
      quantity:
        description: Quantity of the products in the cartItem
        format: int64
        type: integer
  cartResponse:
    description: New cart created successfully
    headers:
      id:
        description: ID of the new cart
        format: int64
        type: integer
      items:
        description: Array of cartItems
        items:
          $ref: '#/definitions/CartItem'
        type: array
  errorResponse:
    description: Error caused
    headers:
      message:
        description: Error message
        type: string
  removeItemResponse:
    description: CartItem removed from the cart successfully
schemes:
- http
swagger: "2.0"
